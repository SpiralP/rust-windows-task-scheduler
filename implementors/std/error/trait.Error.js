(function() {var implementors = {};
implementors["widestring"] = [{"text":"impl&lt;C:&nbsp;<a class=\"trait\" href=\"widestring/trait.UChar.html\" title=\"trait widestring::UChar\">UChar</a> + 'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"widestring/error/enum.NulError.html\" title=\"enum widestring::error::NulError\">NulError</a>&lt;C&gt;","synthetic":false,"types":["widestring::error::NulError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"widestring/error/struct.MissingNulTerminator.html\" title=\"struct widestring::error::MissingNulTerminator\">MissingNulTerminator</a>","synthetic":false,"types":["widestring::error::MissingNulTerminator"]},{"text":"impl&lt;C:&nbsp;<a class=\"trait\" href=\"widestring/trait.UChar.html\" title=\"trait widestring::UChar\">UChar</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"widestring/error/struct.ContainsNul.html\" title=\"struct widestring::error::ContainsNul\">ContainsNul</a>&lt;C&gt;","synthetic":false,"types":["widestring::error::ContainsNul"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"widestring/error/struct.FromUtf32Error.html\" title=\"struct widestring::error::FromUtf32Error\">FromUtf32Error</a>","synthetic":false,"types":["widestring::error::FromUtf32Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"widestring/error/struct.DecodeUtf32Error.html\" title=\"struct widestring::error::DecodeUtf32Error\">DecodeUtf32Error</a>","synthetic":false,"types":["widestring::error::DecodeUtf32Error"]}];
implementors["windows_task_scheduler"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"windows_task_scheduler/struct.WinError.html\" title=\"struct windows_task_scheduler::WinError\">WinError</a>","synthetic":false,"types":["windows_task_scheduler::api::WinError"]}];
implementors["xml"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"xml/reader/struct.Error.html\" title=\"struct xml::reader::Error\">Error</a>","synthetic":false,"types":["xml::reader::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"xml/writer/enum.Error.html\" title=\"enum xml::writer::Error\">EmitterError</a>","synthetic":false,"types":["xml::writer::emitter::EmitterError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()